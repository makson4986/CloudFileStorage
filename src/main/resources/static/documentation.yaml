openapi: 3.1.0
info:
  title: Swagger CloudFileStorage - OpenAPI 3.0
  description: |-
    Multi-user file cloud. Users of the service can use it to upload and store files. 
    The source of inspiration for the project is Google Drive.
  version: 1.0.12
servers:
  - url: http://localhost:8080
tags:
  - name: User
    description: Operations about user
paths:
  /api/auth/sign-up:
    post:
      tags:
        - User
      summary: User registration
      description: Allows you to register a user
      operationId: userRegistration
      requestBody:
        content:
          application/json:
            schema:
               $ref: '#/components/schemas/UserRequest'
      responses:
        "201": 
          description: User registration successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/auth/sign-in:
    post:
      tags:
        - User
      summary: Login
      description: Allows you to login
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
               $ref: '#/components/schemas/UserRequest'
      responses:
        "201":
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Incorrect data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/auth/sign-out:
    post:
      tags:
        - User
      summary: Logout
      description: Allows users to log out of the system
      operationId: logout
      responses:
        "204":
          description: Successful logout
        "401":
          description: The request is executed by an unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/user/me:
    get:
      tags:
        - User
      summary: Current user
      description: Returns the currently logged in user
      operationId: currentUser
      responses:
        "200":
          description: Successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        "401":
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
    UserRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 5
          maxLength: 20
        password:
          type: string
          minLength: 5
          maxLength: 20
    UserResponse:
      type: object
      properties:
        username:
          type: string
