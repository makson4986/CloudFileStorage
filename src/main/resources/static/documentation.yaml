openapi: 3.1.0
info:
  title: Swagger CloudFileStorage - OpenAPI 3.0
  description: |-
    Multi-user file cloud. Users of the service can use it to upload and store files. 
    The source of inspiration for the project is Google Drive.
  version: 1.0.12
tags:
  - name: User
    description: Operations about user
  - name: Resources
    description: Operations about resources
  - name: Directories
    description: Operations about directories
paths:
  /api/user/me:
    get:
      tags:
        - User
      security:
        - cookieAuth: []
      summary: Current user
      description: Returns the currently logged in user
      operationId: currentUser
      responses:
        "200":
          description: Successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /api/auth/sign-up:
    post:
      tags:
        - User
      summary: User registration
      description: Allows you to register a user
      operationId: userRegistration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        "201":
          description: User registration successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /api/auth/sign-in:
    post:
      tags:
        - User
      summary: Login
      description: Allows you to login
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        "201":
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Incorrect data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /api/auth/sign-out:
    post:
      tags:
        - User
      security:
        - cookieAuth: [ ]
      summary: Logout
      description: Allows users to log out of the system
      operationId: logout
      responses:
        "204":
          description: Successful logout
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /api/resource/download:
    get:
      tags:
        - Resources
      security:
        - cookieAuth: [ ]
      summary: Downloading a resource
      description: Allows you to download the resource
      operationId: downloadResource
      parameters:
        - name: path
          in: query
          description: Full path to the resource
          required: true
          schema:
            type: string
      responses:
        "200":
          description: File downloaded successfully
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: '#/components/responses/InvalidPath'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "404":
          $ref: '#/components/responses/ResourceNotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /api/resource/search:
    get:
      tags:
        - Resources
      security: 
        - cookieAuth: [ ]
      summary: Search for a resource
      description: Allows you to find any resource by any word
      operationId: searchResource
      parameters:
        - name: query
          in: query
          description: Search query in URL-encoded format
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        "400":
          description: Invalid or missing search query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /api/resource/move:
    get:
      tags:
        - Resources
      security: 
        - cookieAuth: [ ]
      summary: Rename or move Resource
      description: Allows you to rename or move a resource
      operationId: renameOrMoveResource
      parameters:
        - name: from
          in: query
          description: Old path
          required: true
          schema:
            type: string
        - name: to
          in: query
          description: New path
          required: true
          schema: 
            type: string
      responses:
        "200":
          description: Successful search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        "400":
          $ref: '#/components/responses/InvalidPath'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "404":
          $ref: '#/components/responses/ResourceNotFound'
        "409":
          description: Resource located on the path "to" already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /api/resource:
    get:
      tags:
        - Resources
      security:
        - cookieAuth: []
      summary: Resource info
      description: Getting information about a resource. When passing an empty path, information about the root directory is returned.
      operationId: resourceInfo
      parameters:
        - name: path
          in: query
          description: Full path to the resource
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful receipt of information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        "400":
          $ref: '#/components/responses/InvalidPath'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "404":
          $ref: '#/components/responses/ResourceNotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Resources
      security:
        - cookieAuth: [ ]
      summary: Uploading resources
      description: Allows you to upload files and folders. When passing an empty path, loads the resource into the root directory
      operationId: uploadResource
      parameters:
        - name: path
          in: query
          description: Full path to the resource
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceRequestBody'
      responses:
        "201":
          description: The resource has been loaded successfully
        "400":
          description: Invalid or missing files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "409":
          description: The file already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Resources
      security:
        - cookieAuth: [ ]
      summary: Deleting a resource
      description: Removes the specified resource
      operationId: deleteResource
      parameters:
        - name: path
          in: query
          description: Full path to the resource
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful resource deletion
        "400":
          $ref: '#/components/responses/InvalidPath'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "404":
          $ref: '#/components/responses/ResourceNotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /api/directory:
    get:
      tags:
        - Directories
      security:
        - cookieAuth: [ ]
      summary: Get information
      description: Getting information about the contents of a folder. Passing an empty path returns the contents of the root folder.
      operationId: getContentsInfo
      parameters:
        - name: path
          in: query
          description: Full path to the directory
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Information received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        "400":
          $ref: '#/components/responses/InvalidPath'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "404":
          $ref: '#/components/responses/ResourceNotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Directories
      security:
        - cookieAuth: [ ]
      summary: Create empty directory
      description: Allows you to create an empty directory
      operationId: createEmptyDirectory
      parameters:
        - name: path
          in: query
          description: Full path to the directory
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Folder created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        "400":
          $ref: '#/components/responses/InvalidPath'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "404":
          description: Parent directory does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: The directory already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
    UserRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 5
          maxLength: 20
        password:
          type: string
          minLength: 5
          maxLength: 20
    UserResponse:
      type: object
      properties:
        username:
          type: string
    Resource:
      type: object
      properties:
        path:
          type: string
        name:
          type: string
        size:
          type: integer
          format: int64
        type:
          type: string
          enum:
            - FILE
            - DIRECTORY
    ResourceRequestBody:
      type: object
      properties:
        object:
          type: array
          items:
            type: string
            format: binary
      required:
        - object
  responses:
    UnauthorizedError:
      description: User is not authorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Unknown error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidPath:
      description: Invalid or missing path
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ResourceNotFound:
        description: Resource not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: JSESSIONID

